<div class="min-h-2/3 w-1/5 absolute left-12 top-32 flex-col items-center">
    <div>
        <input type="text" id="search" class="border-1 border-double  w-full h-8 px-2 mb-4 focus:outline-none focus:border-4" placeholder="Rechercher une histoire ou un tag" aria-label="Search" aria-describedby="search-addon"/>
    </div>
    <button class="font-family-joan text-2xl flex items-end gap-1 cursor-pointer dropdown-button mb-2">Thèmes<img src="./api/public/svg/chevron-down.svg" class="size-6 stroke-1"></img></button>
    <ul class="hidden flex-wrap items-center gap-2 gap-y-5 opacity-0 mb-4 ps-2 py-2">
        {{# themes}}
            {{> themes}}
        {{/ themes}}
    </ul>
    <button class="font-family-joan text-2xl flex items-end gap-1 cursor-pointer dropdown-button mb-2">
        Trier par
        <img src="./api/public/svg/chevron-down.svg" class="size-6 stroke-1"></img>
    </button>
    <ul class="hidden flex-col gap-2 opacity-0 ps-2">
        <li class="flex items-center gap-2 relative w-fit">
            <label for="mostLikes" class="font-family-joan cursor-pointer">Les plus likés</label> 
            <input type="checkbox" id="mostLikes" class=" cursor-pointer peer absolute bottom-0.5 -right-7 appearance-none size-4 border border-borders bg-none checked:border-black">
            <img src="/api/public/svg/x.svg" alt="" class=" pointer-events-none hidden peer-checked:block absolute bottom-0.5 -right-7 size-4 stroke-1">
        </li>
        <li class="flex items-center gap-2 relative w-fit">
            <label for="mostRecent" class="font-family-joan cursor-pointer">Les plus récents</label> 
            <input type="checkbox" id="mostRecent" class=" cursor-pointer peer absolute bottom-0.5 -right-7 appearance-none size-4 border border-borders bg-none checked:border-black">
            <img src="/api/public/svg/x.svg" alt="" class=" pointer-events-none hidden peer-checked:block absolute bottom-0.5 -right-7 size-4 stroke-1">
        </li>
        <li class="flex items-center gap-2 relative w-fit">
            <label for="mostParticipations" class="font-family-joan cursor-pointer">Le plus de participations</label> 
            <input type="checkbox" id="mostParticipations" class=" cursor-pointer peer absolute bottom-0.5 -right-7 appearance-none size-4 border border-borders bg-none checked:border-black">
            <img src="/api/public/svg/x.svg" alt="" class=" pointer-events-none hidden peer-checked:block absolute bottom-0.5 -right-7 size-4 stroke-1">
        </li>
    </ul>
    <button class="font-family-joan text-xl mt-4 p-2 border border-black w-full cursor-pointer ">RECHERCHER</button>
</div>  
<script>
    const dropdownButtons = document.querySelectorAll('.dropdown-button');

    dropdownButtons.forEach(button => {
        const ul = button.nextElementSibling;
        const img = button.querySelector('img');

        // Initialiser les styles par défaut
        ul.style.display = 'flex';
        ul.style.opacity = '0';
        ul.style.maxHeight = '0';
        ul.style.overflow = 'hidden';
        ul.style.transition = 'opacity 0.25s ease-in-out, max-height 0.4s cubic-bezier(0.25, 0.1, 0.25, 1)';

        button.addEventListener('click', () => {
            const isRotated = img.style.transform === 'rotate(-180deg)';
            img.style.transform = isRotated ? 'rotate(0deg)' : 'rotate(-180deg)';
            img.style.transition = 'transform 0.3s ease';
            
            if (isRotated) {
                // Fermer le menu
                ul.style.opacity = '0';
                ul.style.maxHeight = '0';
                ul.style.pointerEvents = 'none';
            } else {
                // Ouvrir le menu
                ul.style.opacity = '1';
                ul.style.maxHeight = '500px';
                ul.style.pointerEvents = 'auto';
            }
        });
    });
    
    // Gestion des checkboxes pour qu'un seul puisse être coché à la fois uniquement pour le tri
    const sortCheckboxes = document.querySelectorAll('.hidden.flex-col input[type="checkbox"]');
    sortCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            if (this.checked) {
                sortCheckboxes.forEach(cb => {
                    if (cb !== this) cb.checked = false;
                });
            }
        });
    });
    
    // Gestion du bouton de recherche
    const searchButton = document.querySelector('button.font-family-joan.text-xl');
    searchButton.addEventListener('click', () => {
        // Récupération du texte de recherche
        const searchQuery = document.getElementById('search').value;
        
        // Récupération des thèmes sélectionnés
        const selectedThemes = [];
        const themeCheckboxes = document.querySelectorAll('ul.hidden.flex-wrap input[type="checkbox"]');
        themeCheckboxes.forEach(checkbox => {
            if (checkbox.checked) {
                selectedThemes.push(checkbox.name);
            }
        });
        
        // Récupération du critère de tri sélectionné
        let sortBy = '';
        const sortOptions = document.querySelectorAll('.hidden.flex-col input[type="checkbox"]');
        sortOptions.forEach((checkbox, index) => {
            if (checkbox.checked) {
                if (index === 0) sortBy = 'mostLikes';
                else if (index === 1) sortBy = 'mostRecent';
                else if (index === 2) sortBy = 'mostParticipations';
            }
        });
        
        const searchParams = new URLSearchParams();
        if (searchQuery) searchParams.append('query', searchQuery);
        if (selectedThemes.length > 0) searchParams.append('themes', selectedThemes.join(','));
        if (sortBy) searchParams.append('sortBy', sortBy);
        

        window.location.href = `/search?${searchParams.toString()}`;
    });
</script>