<form action="/addStory" method="POST" class="min-h-full md:min-h-1/2 md:h-1/2 w-full flex px-2 md:px-12 flex-col-reverse md:flex-row items-center mt-40 gap-4 relative md:mt-auto md:my-auto">
    <!-- -------------------- -->
    <!-- Upload image section -->
    <!-- -------------------- -->
    <div class=" h-full md:w-2/6 border flex flex-col items-center px-6">
            <div class="h-1/5 flex flex-col justify-center gap-1">
                <h1 class="font-family-joan font-bold text-4xl text-center">Illustrez</h1>
                <div class="w-1/2 h-0.5 bg-black mx-auto"></div>
            </div>
            <label for="image" class="border-4 border-black border-double w-full h-60 relative mb-1 text-faded-text  hover:bg-faded-text hover:text-black transition duration-300 ease-in-out flex flex-col justify-center items-center gap-2">Uploader une image<br>NON IMPLEMENTE
                <input type="file" name="image" placeholder="Uploader une image" class="text-transparent absolute w-full cursor-pointer" >
            </label>
            <p class="text-center text-faded-text">
                Uploader une image n'est pas obligatoire mais elle peut aider à illustrer votre histoire.
            </p>
    </div>
    <!-- -------------------- -->
    <!-- Writing section -->
    <!-- -------------------- -->
    <div class="h-full hidden md:block md:w-4/6 border px-6 relative">
        <div class="h-1/5 flex flex-col justify-center gap-1">
            <div class="flex justify-center items-center gap-2 w-fit mx-auto">
                <input id="story-title" name="title" class="font-family-joan font-bold w-fit text-4xl text-center" value="Entrez un titre" />
                <img src="/api/public/svg/pen.svg" alt="pen icon">
            </div>
            <div class="w-1/4 h-0.5 bg-black mx-auto"></div>
        </div>
        <!--  -->
        <div class="h-4/5 flex shrink-0">
            <textarea name="participation" id="newstory" class="border resize-none h-4/5 w-3/4 px-2" placeholder="Ecrivez votre premier paragraphe"></textarea>
            <div class="h-4/5 flex items-center gap-2">
                <div class="bg-black w-0.5 h-3/5 mx-2"></div>
                <p>{{username}}</p>
                <img class="bg-gray-500 rounded-full size-8 object-cover object-center" src='{{avatar}}' onerror="this.src='/api/public/images/default.jpg'"></img>
            </div>
        </div>
        <p class="absolute bottom-2 right-2 text-faded-text">0/1000</p>
    </div>
    <!-- -------------------- -->
    <!-- Metadata section -->
    <!-- -------------------- -->
    <div class=" md:min-h-full md:w-2/6 border px-6 py-4">
        <div class="h-1/5 flex flex-col justify-center gap-1">
            <h1 class="font-family-joan font-bold text-4xl text-center">Thèmes de l'histoire</h1>
            <div class="w-1/2 h-0.5 bg-black mx-auto"></div>
        </div>
        <!--  Genre section   -->
        <div class="h-2/5 mt-2">
            <div class="flex flex-col w-1/2 mb-2">
                <h2 class="font-family-joan">Genre(s) -- Max 2</h2>
                <div class="bg-black w-1/2 h-0.5"></div>
            </div>
            <ul class="flex flex-wrap items-center gap-2 gap-y-5 mb-10 ps-2 py-2">
                {{#themes}}
                    <li>
                        <input type="checkbox" name="genres[]" id="{{.}}" value="{{.}}" class="hidden peer">
                        <label for="{{.}}" class="font-family-joan text-faded-text peer-checked:text-black peer-checked:border-black border border-faded-text p-1 py-1.5 cursor-pointer select-none">{{.}}</label>
                    </li>
                {{/themes}}
                
            </ul>
        </div>
        <!--  Tags section   -->
        <div class="">
            <div class="flex flex-col md:w-1/2 mb-2">
                <h2 class="font-family-joan">Tag(s) -- Max 5</h2>
                <div class="bg-black w-1/2 h-0.5"></div>
            </div>
            <input type="text" name="" id="tags" class="border w-2/3 px-2 md:py-1 mb-2" placeholder="Ex: Amour, Amitié, Enigme...">
            <button id="tagbutton" type="button" class="border-4 border-double border-black cursor-pointer px-1 hover:bg-faded-text transition duration-300">Valider</button>
            <ul id="taglist" class="flex flex-wrap items-center gap-2 mb-4 ps-2 md:py-2">
            </ul>
            <div id="hidden-tag-container">
            </div>
        </div>
    </div>    
    <!-- Mobile version of the writing section -->
    <div class="mt-5 h-100 block md:hidden border relative w-full px-4">
        <div class="flex flex-col justify-center gap-1">
            <div class="flex justify-center items-center gap-2 w-fit mx-auto">
                <input id="story-title-mobile" name="title" class="font-family-joan font-bold text-4xl text-center w-2/3 overflow-hidden" value="Entrez un titre" />
                <img src="/api/public/svg/pen.svg" alt="pen icon">
            </div>
            <div class="w-1/4 h-0.5 bg-black mx-auto mb-2"></div>
        </div>
        <div class="h-4/5 shrink-1 flex flex-col">
            <textarea name="participation" id="newstory-mobile" class="border resize-none h-64 w-full px-2 mb-2" placeholder="Ecrivez votre premier paragraphe">
            </textarea>
            <p class="absolute bottom-3 right-5 text-faded-text">0/1000</p>
        </div>
    </div>
    <!-- -------------------- -->
    <!-- Submit button section -->
    <!-- -------------------- -->
    <button type="submit" class=" w-fit px-4 py-2 cursor-pointer hover:bg-faded-text transition duration-300 absolute -bottom-16 left-1/2 -translate-x-1/2 border-4 border-double font-family-joan">Valider</button>
</form>

<script>
    const input = document.querySelector("#tags");
    const taglist = document.querySelector("#taglist");
    const tagbutton = document.querySelector("#tagbutton");
    const hiddenTagContainer = document.querySelector("#hidden-tag-container");
    const maxTags = 5; // Maximum number of tags allowed
    const maxTagLength = 20; // Maximum length of each tag
    
    const textarea = document.getElementById("newstory") || document.getElementById("newstory-mobile");
    const charCounter = document.querySelector(".bottom-2.right-2.text-faded-text");
    const maxLength = 1000;
    
    function updateCharCount() {
        const length = textarea.value.length;
        charCounter.textContent = `${length}/${maxLength}`;
        
        if (length > maxLength * 0.9) {
            charCounter.classList.add("text-red-500");
        } else {
            charCounter.classList.remove("text-red-500");
        }
    }
    
    textarea.addEventListener("input", function() {
        if (this.value.length > maxLength) {
            this.value = this.value.substring(0, maxLength);
        }

        // Synchroniser les textareas à chaque saisie
        const desktopTextarea = document.getElementById("newstory");
        const mobileTextarea = document.getElementById("newstory-mobile");
        
        if (this.id === "newstory") {
            mobileTextarea.value = this.value;
        } else {
            desktopTextarea.value = this.value;
        }
        
        updateCharCount();
    });
    
    window.addEventListener("load", updateCharCount);

    function addTag() {
        const tagText = input.value.trim();
        if (tagText && taglist.children.length < maxTags && tagText.length <= maxTagLength) {
            const li = document.createElement("li");
            li.textContent = tagText;
            li.className = "border border-black px-2 py-1 cursor-pointer w-fit";
            
            const hiddenInput = document.createElement("input");
            hiddenInput.type = "hidden";
            hiddenInput.name = "tags[]";
            hiddenInput.value = tagText;
            
            li.addEventListener("click", () => {
                li.remove();
                hiddenInput.remove();
            });
            
            taglist.appendChild(li);
            hiddenTagContainer.appendChild(hiddenInput);
            
            input.value = ""; 
        }
    }

    input.addEventListener("keydown", (event) => {
        if (event.key === "Enter") {
            event.preventDefault(); n
            addTag();
        }
    });

    tagbutton.addEventListener("click", (event) => {
        event.preventDefault(); 
        addTag();
    });

    const titleInput = document.getElementById("story-title") || document.getElementById("story-title-mobile");
    
    function adjustTitleWidth() {
        const temp = document.createElement("span");
        temp.style.visibility = "hidden";
        temp.style.position = "absolute";
        temp.style.whiteSpace = "nowrap";
        temp.style.font = window.getComputedStyle(titleInput).font;
        temp.textContent = titleInput.value || " ";
        
        document.body.appendChild(temp);
        const width = temp.getBoundingClientRect().width;
        document.body.removeChild(temp);
        
        // Limitez la largeur maximale sur mobile
        const isMobile = window.innerWidth < 768;
        const maxWidth = isMobile ? Math.min(width + 10, window.innerWidth * 0.6) : Math.max(width + 10, 150);
        
        titleInput.style.width = maxWidth + "px";
    }
    
    window.addEventListener("load", adjustTitleWidth);
    
    titleInput.addEventListener("input", adjustTitleWidth);
    
    titleInput.addEventListener("focus", function() {
        this.select();
    });

    // Synchroniser les titres
    const desktopTitle = document.getElementById("story-title");
    const mobileTitle = document.getElementById("story-title-mobile");

    desktopTitle.addEventListener("input", function() {
        mobileTitle.value = this.value;
        adjustTitleWidth();
    });

    mobileTitle.addEventListener("input", function() {
        desktopTitle.value = this.value;
        adjustTitleWidth();
    });

    // Synchroniser avant soumission
    document.querySelector("form").addEventListener("submit", function(event) {
        const desktopTextarea = document.getElementById("newstory");
        const mobileTextarea = document.getElementById("newstory-mobile");
        const desktopTitle = document.getElementById("story-title");
        const mobileTitle = document.getElementById("story-title-mobile");
        
        // Synchronisation des valeurs entre desktop et mobile
        if (window.innerWidth >= 768) {
            mobileTextarea.value = desktopTextarea.value;
            mobileTitle.value = desktopTitle.value;
        } else {
            desktopTextarea.value = mobileTextarea.value;
            desktopTitle.value = mobileTitle.value;
        }
    });
</script>